#!/usr/bin/env ruby
# coding: utf-8
require 'open-uri'
require 'nokogiri'
require 'mechanize'
require 'active_record'
require 'active_support'

ActiveRecord::Base.establish_connection(
  adapter: 'sqlite3',
  database: "#{Dir.home}/.bin/festival/data/torrents"
)

class Film < ActiveRecord::Base
  validates :title, uniqueness: true
  scope :download, -> { where(download: true) }
end

unless Film.table_exists?
  ActiveRecord::Schema.define do
    create_table :films do |t|
     t.string :title
     t.string :genre
     t.text :announce
     t.timestamps
     t.string :torrent_file
     t.boolean :download
    end
  end
end

Mechanize.new do |agent|
  agent.user_agent_alias = 'Mac FireFox'
  agent.follow_meta_refresh = true
  per_page = 1

  ['new-films'].each do |section| # 'new-torrent'
    6.times do
      page =
        if per_page == 1
          agent.get("http://www.fast-torrent.ru/#{section}/")
        else
          agent.get("http://www.fast-torrent.ru/#{section}/#{per_page}.html")
        end

      page.search('.film-item').each do |item|
        download = agent.get(item.search('.film-download').attr('href').value)
        download.search('.torrent-row').each do |row|
          if (row.search('.c3').text.to_f < 3 &&
              Film.where("title LIKE ?", "%#{item.search('h2').text}%").empty?)
            torrent = row.search('.c7 a').attr('href').value
            Dir.chdir("#{Dir.home}/Downloads")
            system("wget 'http://www.fast-torrent.ru#{torrent}' > /dev/null 2>&1")
            Film.new(title: item.search('h2').text.gsub('/n', ' '),
                     genre: item.search('.film-genre').text.gsub('/n', ' '),
                     announce: item.search('.film-announce').text.gsub('/n', ' '),
                     torrent_file: torrent.split('/')[-1]).save!
          end
        end
      end

      per_page += 1
    end
  end
end
