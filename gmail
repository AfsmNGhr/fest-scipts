#!/usr/bin/env ruby
# coding: utf-8
require 'net/ping'
require 'gmail'
require 'fest'
require 'yaml'

def check_counts_letters(gmail)
  @counts = {}
  @labels.each do |k, _v|
    h = { k => gmail.mailbox(k).count(:unread) }
    @counts.merge!(h)
  end
  @counts
end

def read_old_counts_letters
  Dir.chdir("/tmp")
  File.exist?('gmail.yml') ? YAML.load(File.open('gmail.yml')) : {}
end

def save_counts_letters
  system('touch gmail.yml') if File.exist?('gmail.yml')
  File.open('gmail.yml', 'w') do |f|
    f.write @counts.to_yaml
  end
end

def check_new_counts_letters
  @counts.each do |k, v|
    count = (
      if @old_counts.empty? || v < @old_counts[k]
        v
      else
        v - @old_counts[k]
      end
    )
    say_new_counts(k, count)
  end
end

def say_new_counts(k, count)
  text = @fest.pluralform(count, %w(сообщение сообщения сообщений))
  count = 'Одн+о' if count == 1
  all = "У вас #{count} #{text}"
  part = "#{count} #{text} в разделе #{@labels[k]}"
  @fest.say(k == 'INBOX' ? all : part) unless count == 0
end

if Net::Ping::TCP.new('www.gmail.com', 'http').ping?

  @fest = Fest.new
  @labels = { 'INBOX' => 'Входящие', 'Search job' => 'Поиск работы',
              'Music' => 'Музыка', 'Advertising' => 'Реклама',
              'Education' => 'Обучение', 'Interesting' => 'Интер+есное',
              'IT' => 'Ай ти', 'Freelance' => 'Фрии+ла+йнс',
              'Development' => 'Разработ ка', 'Work' => 'Работа' }

  Gmail.new('login', 'password') do |gmail|
    check_counts_letters(gmail)
    gmail.logout
  end

  @old_counts = read_old_counts_letters
  check_new_counts_letters
  save_counts_letters
end
